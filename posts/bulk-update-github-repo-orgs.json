{"id": "bulk-update-github-repo-orgs", "title": "Quick Tip: Bulk Update Github Repo Orgs", "category": "Quick Tips", "status": "published", "preview": "A quick one-liner for bulk updating the Organization name in the remote URL for\n  all of your cloned Github repos. This is specifically useful when you rename an\n  Organization in Github. (Hooray for rebranding!)", "created_at": "2019-07-06 03:57:09", "body": "<p>I recently needed to rename a Github Organization with about 80 repositories. While\nGithub very helpfully creates automated redirects for your repos during the rename\nprocess, it is still <a href=\"https://help.github.com/en/articles/renaming-an-organization#changes-that-occur-automatically\">best practice</a>\nto go through and update the remote URLs for all of the repos you have cloned on\nyour computer.</p>\n\n<p>This is a pretty simple process for a single repository. You just need to set your\nremote URL to use the new Organization name (<code>NewOrgName</code> in this example).</p>\n\n<div class=\"codehilite\"><pre><span></span><code>&gt; git remote set-url origin git@github.com:NewOrgName/my-repo.git\n</code></pre></div>\n\n<p><em>Note: This post assumes that your remote repo is named origin and you cloned via SSH, please adjust accordingly.</em></p>\n\n<p>Now, if you are like me you probably have something like 50 repos that you'll need\nto perform this operation on. So instead of doing data entry for an hour, I put together\nthis little bash one-liner that loops through all of my repos and performs the update.</p>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">for</span> d in ./*/ <span class=\"p\">;</span> <span class=\"k\">do</span> <span class=\"o\">(</span><span class=\"nb\">cd</span> <span class=\"s2\">&quot;</span><span class=\"nv\">$d</span><span class=\"s2\">&quot;</span> <span class=\"o\">&amp;&amp;</span> git remote set-url origin <span class=\"k\">$(</span>git remote get-url origin <span class=\"p\">|</span> sed s/:OldOrgName<span class=\"se\">\\\\</span>//:NewOrgName<span class=\"se\">\\\\</span>//<span class=\"k\">)</span> <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">echo</span> <span class=\"s2\">&quot;Remote Updated: </span><span class=\"nv\">$d</span><span class=\"s2\">&quot;</span><span class=\"o\">)</span><span class=\"p\">;</span> <span class=\"k\">done</span>\n</code></pre></div>\n\n<p>A few notes about this script:</p>\n\n<ul>\n<li>It loops through the direct children of your current directory and uses <code>sed</code> to\nreplace the old org name with your new org name. This means your directory structure must look\nsomething like this for this to work:</li>\n</ul>\n\n<pre><code>- directory/\n  - repo-1/\n  - repo-2/\n  - etc...\n</code></pre>\n\n<ul>\n<li>Make sure you update the <code>OldOrgName</code> and <code>NewOrgName</code> values to reflect your actual values.</li>\n</ul>\n"}