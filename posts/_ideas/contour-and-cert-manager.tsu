---
id: contour-and-cert-manager
title: Contour & Cert Manager
category: Ops
status: draft
preview: >
  Approaches for getting Contour to work seamlessly with LetsEncrypt on Kubernetes.
---
https://docs.google.com/presentation/d/1aVjYJOXd23C8y_bF8bRG6E6qoOG0QZHkzJiJnl_NBQs/edit#slide=id.g58db2679ee_0_80
At Gamesight we use the Contour ingress controller extensively. The Kubernetes-native
approach to managing ingress taken by the Contour team have given us a really
solid experience that integrates seamlessly with our existing tooling. The CRD
approach used in Contour over the annotation-based configuration in Ambassador
has enabled us to pull Contour IngressRoute definitions directly into our tooling.

One set of challenges has been running automated SSL cert provisioning in a
multi-cluster environment. We use Cert-Manager to manage the LetsEncrypt
certificates for all of our domains. Cert-Manager supports two different challenge
types:
- **http01**: This provisioner works by placing a unique challenge file generated
by LetsEncrypt at a specific public route on your domain. LetsEncrypt then verifies
the contents of this file and issues the cert if the values match.
- **dns01**: This provisioner works by placing the challenge value generated by
LetsEncrypt into a TXT record in your domain’s DNS. LetsEncrypt then verifies
that the TXT record’s contents and issues the cert if the values match.

If you have the option to programmatically control DNS entries for your domains,
I would highly recommend going with the dns01 issuer. It removes most of the
complexity that we will cover in the rest of this article. Unfortunately, we
only have programmatic access to DNS for some of our domains so we have to
fallback to the http01 issuer in a few cases.

- Goal
  - Running certs through both http01 and dns01 issuers using contour!
  - Gets around problems we had with Ambassador only supporting a single tls cert per instance (running 1 ingest per cert => a shit ton of certs or everything on 1 cert => neither scales well!!). This is fixed in Ambassador 0.5.0 with SNI support but we had already made the switch
- Solution
  - Setup cert manager issuers for both DNS & HTTP
  - Create the DNS certs + IngressRoutes
  - Cross cluster syncing using a custom script
- Future Work
  - Waiting on that PR to go through to implement http01 on IngressRoute objects
  - Secret sync!
